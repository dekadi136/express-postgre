// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  email     String   @unique
  name      String?
  password String
  biodata Biodata?
  blogs Blog[]
}

model Blog {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  title String 
  content String?
  userId Int 
  user User @relation(fields: [userId], references: [id])
  categories CategoryOnBlog[]
}

model Category {
  id    Int    @id @default(autoincrement())
  createdAt DateTime @default(now())
  name  String
  categoryOnBlogs CategoryOnBlog[]
}

model Biodata {
  id    Int    @id @default(autoincrement())
  createdAt DateTime @default(now())
  name  String
  nim String @unique
  tanggal_lahir DateTime
  alamat String
  sudah_menikah String
  userId Int @unique
  user User @relation(fields: [userId], references: [id])
}

model CategoryOnBlog{
  id    Int    @id @default(autoincrement())
  createdAt DateTime @default(now())
  blogId Int
  categoryId Int
  blog Blog @relation(fields: [blogId], references: [id])
  category Category @relation(fields: [categoryId], references: [id])
}